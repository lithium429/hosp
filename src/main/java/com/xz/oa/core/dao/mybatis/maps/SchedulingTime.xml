<?xml version="1.0" encoding="UTF-8"?> 
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="entity.SchedulingTime">  
	<resultMap id="schedulingTimeResult" type="SchedulingTime">
		<result column="id" property="id" jdbcType="DECIMAL" />
		<result column="type" property="type" jdbcType="DECIMAL" />
		<result column="start_time" property="start_time" jdbcType="TIMESTAMP" />
		<result column="end_time" property="end_time" jdbcType="TIMESTAMP" />
    </resultMap>

	<sql id="sf-schedulingTime">
		<where>
			<if test="id != null">
				and a.id = #{id}
			</if>
			<if test="type != null">
				and a.type = #{type}
			</if>
			<if test="start_time != null">
				and a.start_time = #{start_time}
			</if>
			<if test="end_time != null">
				and a.end_time = #{end_time}
			</if>
			<if test="map.keyword != null">
				and a.keyword like concat('%',#{map.keyword},'%')
			</if>
			<if test="map.ids != null">
				and a.id in
				<foreach collection="map.ids" open="(" separator="," close=")"
					index="index" item="item">
					#{item}
				</foreach>
			</if>
		</where>
		<if test="map.sort != null">
			order by a.id desc
		</if>
	</sql>

	<select id="selectSchedulingTime" resultType="SchedulingTime" parameterType="SchedulingTime">
		select a.* from scheduling_time a
		<include refid="sf-schedulingTime" />
	</select>
	
	<select id="selectSchedulingTimeList" resultType="SchedulingTime" parameterType="SchedulingTime">
		select a.* from scheduling_time a
		<include refid="sf-schedulingTime" />
	</select>
	
	<select id="selectSchedulingTimeCount" resultType="int" parameterType="SchedulingTime">
		select count(1) from scheduling_time a
		<include refid="sf-schedulingTime" />
	</select>
	
	<select id="selectSchedulingTimePageList" resultType="SchedulingTime" parameterType="SchedulingTime">
		select a.* from scheduling_time a
		<include refid="sf-schedulingTime" />
		limit #{map.startIndex},#{map.pageSize}
	</select>

	<insert id="insertSchedulingTime" parameterType="SchedulingTime" useGeneratedKeys="true"
		keyProperty="id"> 
		<![CDATA[insert into scheduling_time (]]>
		<trim suffixOverrides=",">  
			<if test="id != null">id,</if> 
			<if test="type != null">type,</if> 
			<if test="start_time != null">start_time,</if> 
			<if test="end_time != null">end_time,</if> 
		</trim>
		<![CDATA[) values (]]>
		<trim suffixOverrides=",">  
			<if test="id != null">#{id},</if> 
			<if test="type != null">#{type},</if> 
			<if test="start_time != null">#{start_time},</if> 
			<if test="end_time != null">#{end_time},</if> 
		</trim>
		<![CDATA[)]]>
	</insert>

	<update id="updateSchedulingTime" parameterType="SchedulingTime">
		update scheduling_time
		<set>
			<if test="type != null">type=#{type},</if>
			<if test="start_time != null">start_time=#{start_time},</if>
			<if test="end_time != null">end_time=#{end_time},</if>
		</set>
		<where>
			<if test="id != null">
				and id = #{id}
			</if>
			<if test="map.ids != null">
				and id in
				<foreach collection="map.ids" open="(" separator="," close=")"
					index="index" item="item">
					#{item}
				</foreach>
			</if>
		</where>
	</update>
	
	<delete id="deleteSchedulingTime" parameterType="SchedulingTime">
		delete from scheduling_time 
		<where>
			<if test="id != null">
				and id = #{id}
			</if>
			<if test="map.ids != null">
				and id in
				<foreach collection="map.ids" open="(" separator="," close=")"
					index="index" item="item">
					#{item}
				</foreach>
			</if>
		</where>
	</delete>
</mapper>