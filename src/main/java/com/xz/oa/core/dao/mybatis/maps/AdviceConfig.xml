<?xml version="1.0" encoding="UTF-8"?> 
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="entity.AdviceConfig">  
	<resultMap id="adviceConfigResult" type="AdviceConfig">
		<result column="id" property="id" jdbcType="DECIMAL" />
		<result column="instruction" property="instruction" jdbcType="VARCHAR" />
		<result column="regulation" property="regulation" jdbcType="VARCHAR" />
    </resultMap>

	<sql id="sf-adviceConfig">
		<where>
			<if test="id != null">
				and a.id = #{id}
			</if>
			<if test="instruction != null">
				and a.instruction = #{instruction}
			</if>
			<if test="regulation != null">
				and a.regulation = #{regulation}
			</if>
			<if test="map.keyword != null">
				and a.keyword like concat('%',#{map.keyword},'%')
			</if>
			<if test="map.ids != null">
				and a.id in
				<foreach collection="map.ids" open="(" separator="," close=")"
					index="index" item="item">
					#{item}
				</foreach>
			</if>
		</where>
		<if test="map.sort != null">
			order by a.id desc
		</if>
	</sql>

	<select id="selectAdviceConfig" resultType="AdviceConfig" parameterType="AdviceConfig">
		select a.* from advice_config a
		<include refid="sf-adviceConfig" />
	</select>
	
	<select id="selectAdviceConfigList" resultType="AdviceConfig" parameterType="AdviceConfig">
		select a.* from advice_config a
		<include refid="sf-adviceConfig" />
	</select>
	
	<select id="selectAdviceConfigCount" resultType="int" parameterType="AdviceConfig">
		select count(1) from advice_config a
		<include refid="sf-adviceConfig" />
	</select>
	
	<select id="selectAdviceConfigPageList" resultType="AdviceConfig" parameterType="AdviceConfig">
		select a.* from advice_config a
		<include refid="sf-adviceConfig" />
		limit #{map.startIndex},#{map.pageSize}
	</select>
	
	<select id="selectAdviceConfigSort" resultType="int" parameterType="AdviceConfig">
		select max(a.id) from advice_config a
		<include refid="sf-adviceConfig" />
	</select>

	<insert id="insertAdviceConfig" parameterType="AdviceConfig" useGeneratedKeys="true"
		keyProperty="id"> 
		<![CDATA[insert into advice_config (]]>
		<trim suffixOverrides=",">  
			<if test="id != null">id,</if> 
			<if test="instruction != null">instruction,</if> 
			<if test="regulation != null">regulation,</if> 
		</trim>
		<![CDATA[) values (]]>
		<trim suffixOverrides=",">  
			<if test="id != null">#{id},</if> 
			<if test="instruction != null">#{instruction},</if> 
			<if test="regulation != null">#{regulation},</if> 
		</trim>
		<![CDATA[)]]>
	</insert>

	<update id="updateAdviceConfig" parameterType="AdviceConfig">
		update advice_config
		<set>
			<if test="instruction != null">instruction=#{instruction},</if>
			<if test="regulation != null">regulation=#{regulation},</if>
		</set>
		<where>
			<if test="id != null">
				and id = #{id}
			</if>
			<if test="map.ids != null">
				and id in
				<foreach collection="map.ids" open="(" separator="," close=")"
					index="index" item="item">
					#{item}
				</foreach>
			</if>
		</where>
	</update>
	
	<delete id="deleteAdviceConfig" parameterType="AdviceConfig">
		delete from advice_config 
		<where>
			<if test="id != null">
				and id = #{id}
			</if>
			<if test="map.ids != null">
				and id in
				<foreach collection="map.ids" open="(" separator="," close=")"
					index="index" item="item">
					#{item}
				</foreach>
			</if>
		</where>
	</delete>
</mapper>