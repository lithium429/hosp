<?xml version="1.0" encoding="UTF-8"?> 
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="entity.Email">  
	<resultMap id="emailResult" type="Email">
		<result column="id" property="id" jdbcType="DECIMAL" />
		<result column="sender_id" property="sender_id" jdbcType="DECIMAL" />
		<result column="subject" property="subject" jdbcType="VARCHAR" />
		<result column="create_time" property="create_time"  />
		<result column="is_file" property="is_file" jdbcType="VARCHAR" />
    </resultMap>
    
    <resultMap id="emailResult_help" type="Email" extends="emailResult">
		<result column="sender_name" property="sender_name" jdbcType="VARCHAR" />
		<collection property="users" resultMap="emailUserResult_help" />
    </resultMap>


	<resultMap id="emailUserResult_help" type="Email">
		<result column="id" property="id" jdbcType="DECIMAL" />
		<result column="type" property="type" jdbcType="DECIMAL" />
		<result column="user_id" property="user_id" jdbcType="DECIMAL" />
		<result column="is_forward" property="is_forward" jdbcType="VARCHAR" />
		<result column="is_reply" property="is_reply" jdbcType="VARCHAR" />
		<result column="reply_email_id" property="reply_email_id" jdbcType="DECIMAL" />
		<result column="is_delete" property="is_delete" jdbcType="VARCHAR" />
		<result column="is_send" property="is_send" jdbcType="VARCHAR" />
		<result column="is_read" property="is_read" jdbcType="VARCHAR" />
		<result column="is_secret" property="is_secret" jdbcType="VARCHAR" />
		<result column="is_copy" property="is_copy" jdbcType="VARCHAR" />
		<result column="email_id" property="email_id" jdbcType="DECIMAL" />
    </resultMap>
    
	<sql id="sf-email">
		<where>
			<if test="id != null">
				and a.id = #{id}
			</if>
			<if test="sender_id != null">
				and a.sender_id = #{sender_id}
			</if>
			<if test="subject != null">
				and a.subject = #{subject}
			</if>
			<if test="create_time != null">
				and a.create_time = #{create_time}
			</if>
			<if test="map.keyword != null">
				and a.keyword like concat('%',#{map.keyword},'%')
			</if>
			<if test="map.user_name != null">
				and c.user_name like concat('%',#{map.user_name},'%')
			</if>
			<if test="map.subject != null">
				and a.subject like concat('%',#{map.subject},'%')
			</if>
			<if test="is_file != null">
				and a.is_file = #{is_file}
			</if>
			<if test="map.ids != null">
				and a.id in
				<foreach collection="map.ids" open="(" separator="," close=")"
					index="index" item="item">
					#{item}
				</foreach>
			</if>
		</where>
		<if test="map.sort != null">
			order by a.id desc
		</if>
	</sql>

	<select id="selectEmail" resultType="Email" parameterType="Email">
		select a.* from email a
		<include refid="sf-email" />
	</select>
	
	<select id="selectEmailList" resultType="Email" parameterType="Email">
		select a.* from email a
		<include refid="sf-email" />
	</select>
	
	<select id="selectEmailCount" resultType="int" parameterType="Email">
		select count(1) from email a
		<include refid="sf-email" />
	</select>
	
	<select id="selectEmailPageList" resultType="Email" parameterType="Email">
		select a.* from email a
		<include refid="sf-email" />
		limit #{map.startIndex},#{map.pageSize}
	</select>
	
	<select id="selectEmailSort" resultType="int" parameterType="Email">
		select max(a.id) from email a
		<include refid="sf-email" />
	</select>

	<insert id="insertEmail" parameterType="Email" useGeneratedKeys="true"
		keyProperty="id"> 
		<![CDATA[insert into email (]]>
		<trim suffixOverrides=",">  
			<if test="id != null">id,</if> 
			<if test="sender_id != null">sender_id,</if> 
			<if test="subject != null">subject,</if> 
			<if test="create_time != null">create_time,</if> 
			<if test="is_file != null">is_file,</if> 
		</trim>
		<![CDATA[) values (]]>
		<trim suffixOverrides=",">  
			<if test="id != null">#{id},</if> 
			<if test="sender_id != null">#{sender_id},</if> 
			<if test="subject != null">#{subject},</if> 
			<if test="create_time != null">#{create_time},</if> 
			<if test="is_file != null">#{is_file},</if> 
		</trim>
		<![CDATA[)]]>
	</insert>

	<update id="updateEmail" parameterType="Email">
		update email
		<set>
			<if test="sender_id != null">sender_id=#{sender_id},</if>
			<if test="subject != null">subject=#{subject},</if>
			<if test="create_time != null">create_time=#{create_time},</if>
			<if test="is_file!= null">is_file=#{is_file},</if>
		</set>
		<where>
			<if test="id != null">
				and id = #{id}
			</if>
			<if test="map.ids != null">
				and id in
				<foreach collection="map.ids" open="(" separator="," close=")"
					index="index" item="item">
					#{item}
				</foreach>
			</if>
		</where>
	</update>
	
	<delete id="deleteEmail" parameterType="Email">
		delete from email 
		<where>
			<if test="id != null">
				and id = #{id}
			</if>
			<if test="map.ids != null">
				and id in
				<foreach collection="map.ids" open="(" separator="," close=")"
					index="index" item="item">
					#{item}
				</foreach>
			</if>
		</where>
	</delete>
</mapper>