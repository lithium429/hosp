<?xml version="1.0" encoding="UTF-8"?> 
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="entity.MeetingVerifyRecord">  
	

	<sql id="sf-meetingVerifyRecord">
		<where>
			<if test="id != null">
				and a.id = #{id}
			</if>
			<if test="meeting_id != null">
				and a.meeting_id = #{meeting_id}
			</if>
			<if test="meeting_vstate != null">
				and a.meeting_vstate = #{meeting_vstate}
			</if>
			<if test="content != null">
				and a.content = #{content}
			</if>
			<if test="creator_id != null">
				and a.creator_id = #{creator_id}
			</if>
			<if test="create_time != null">
				and a.create_time = #{create_time}
			</if>
			<if test="map.keyword != null">
				and a.keyword like concat('%',#{map.keyword},'%')
			</if>
			<if test="map.ids != null">
				and a.id in
				<foreach collection="map.ids" open="(" separator="," close=")"
					index="index" item="item">
					#{item}
				</foreach>
			</if>
		</where>
		<if test="map.sort != null">
			order by a.id desc
		</if>
	</sql>

	<select id="selectMeetingVerifyRecord" resultType="MeetingVerifyRecord" parameterType="MeetingVerifyRecord">
		select a.* from meeting_verify_record a
		<include refid="sf-meetingVerifyRecord" />
	</select>
	
	<select id="selectMeetingVerifyRecordList" resultType="MeetingVerifyRecord" parameterType="MeetingVerifyRecord">
		select a.* from meeting_verify_record a
		<include refid="sf-meetingVerifyRecord" />
	</select>
	
	<select id="selectMeetingVerifyRecordCount" resultType="int" parameterType="MeetingVerifyRecord">
		select count(1) from meeting_verify_record a
		<include refid="sf-meetingVerifyRecord" />
	</select>
	
	<select id="selectMeetingVerifyRecordPageList" resultType="MeetingVerifyRecord" parameterType="MeetingVerifyRecord">
		select a.* from meeting_verify_record a
		<include refid="sf-meetingVerifyRecord" />
		limit #{map.startIndex},#{map.pageSize}
	</select>
	
	<select id="selectMeetingVerifyRecordSort" resultType="int" parameterType="MeetingVerifyRecord">
		select max(a.id) from meeting_verify_record a
		<include refid="sf-meetingVerifyRecord" />
	</select>

	<insert id="insertMeetingVerifyRecord" parameterType="MeetingVerifyRecord" useGeneratedKeys="true"
		keyProperty="id"> 
		<![CDATA[insert into meeting_verify_record (]]>
		<trim suffixOverrides=",">  
			<if test="id != null">id,</if> 
			<if test="meeting_id != null">meeting_id,</if> 
			<if test="meeting_vstate != null">meeting_vstate,</if> 
			<if test="content != null">content,</if> 
			<if test="creator_id != null">creator_id,</if> 
			<if test="create_time != null">create_time,</if> 
		</trim>
		<![CDATA[) values (]]>
		<trim suffixOverrides=",">  
			<if test="id != null">#{id},</if> 
			<if test="meeting_id != null">#{meeting_id},</if> 
			<if test="meeting_vstate != null">#{meeting_vstate},</if> 
			<if test="content != null">#{content},</if> 
			<if test="creator_id != null">#{creator_id},</if> 
			<if test="create_time != null">#{create_time},</if> 
		</trim>
		<![CDATA[)]]>
	</insert>

	<update id="updateMeetingVerifyRecord" parameterType="MeetingVerifyRecord">
		update meeting_verify_record
		<set>
			<if test="meeting_id != null">meeting_id=#{meeting_id},</if>
			<if test="meeting_vstate != null">meeting_vstate=#{meeting_vstate},</if>
			<if test="content != null">content=#{content},</if>
			<if test="creator_id != null">creator_id=#{creator_id},</if>
			<if test="create_time != null">create_time=#{create_time},</if>
		</set>
		<where>
			<if test="id != null">
				and id = #{id}
			</if>
			<if test="map.ids != null">
				and id in
				<foreach collection="map.ids" open="(" separator="," close=")"
					index="index" item="item">
					#{item}
				</foreach>
			</if>
		</where>
	</update>
	
	<delete id="deleteMeetingVerifyRecord" parameterType="MeetingVerifyRecord">
		delete from meeting_verify_record 
		<where>
			<if test="id != null">
				and id = #{id}
			</if>
			<if test="meeting_id != null">
				and meeting_id = #{meeting_id}
			</if>
			<if test="map.ids != null">
				and id in
				<foreach collection="map.ids" open="(" separator="," close=")"
					index="index" item="item">
					#{item}
				</foreach>
			</if>
		</where>
	</delete>
</mapper>